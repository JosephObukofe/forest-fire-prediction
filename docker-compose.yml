version: "3.9"

services:
  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_BUCKET=${MINIO_BUCKET}
      - MINIO_OBJECT_NAME=${MINIO_OBJECT_NAME}
    ports:
      - "9278:9278"
    volumes:
      - ./data/raw/minio:/data
    networks:
      - predicting_forest_fires_app_network
    command: minio server /data --address ":9278" > /dev/null 2>&1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:9278/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
    
  redis:
    image: redis:alpine3.20
    container_name: redis
    environment:
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_HOST_NAME=${REDIS_HOST_NAME}
      - REDIS_PASSWORD=${REDIS_DB_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - predicting_forest_fires_app_network
    command: redis-server --requirepass "${REDIS_DB_PASSWORD}" --bind 0.0.0.0
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "-p", "6379", "-a", "${REDIS_DB_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    container_name: mlflow
    environment:
      - MLFLOW_TRACKING_URI=http://0.0.0.0:5001
      - MLFLOW_BACKEND_STORE_URI=sqlite:///mlflow.db
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=/mlartifacts
    ports:
      - "5001:5001"
    volumes:
      - ./mlruns:/mlruns
      - ./mlartifacts:/mlartifacts
      - ./mlflow.db:/mlflow.db
    networks:
      - predicting_forest_fires_app_network
    command: mlflow server --host 0.0.0.0 --port 5001
    healthcheck:
      disable: true

  fastapi:
    build:
      context: .
      dockerfile: app/app_main/Dockerfile.fastapi-celery
    container_name: fastapi
    environment:
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_HOST_NAME=${REDIS_HOST_NAME}
      - REDIS_PASSWORD=${REDIS_DB_PASSWORD}
    ports:
      - "8001:8001"
    networks:
      - predicting_forest_fires_app_network
    depends_on:
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
      mlflow:
        condition: service_started

  streamlit:
    build:
      context: .
      dockerfile: app/streamlit/Dockerfile.streamlit
    container_name: streamlit
    ports:
      - "8501:8501"
    networks:
      - predicting_forest_fires_app_network
    depends_on:
      fastapi:
        condition: service_started

networks:
  predicting_forest_fires_app_network:
    driver: bridge